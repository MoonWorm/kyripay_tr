<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.kyripay_tr</groupId>
	<artifactId>payment-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>payment-service</name>
	<description>Payment service for Kyripay application</description>

	<properties>
		<java.version>1.8</java.version>
		<swagger.version>2.9.2</swagger.version>
		<rest-assured.version>3.1.0</rest-assured.version>
		<spring-restdocs.version>2.0.1.RELEASE</spring-restdocs.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<asciidoctor-maven-plugin.version>1.5.6</asciidoctor-maven-plugin.version>
		<jooq.version>3.11.11</jooq.version>
		<postgresql.driver.version>42.2.5</postgresql.driver.version>
		<dozer.version>5.3.1</dozer.version>
		<testcontainers.version>1.11.3</testcontainers.version>

		<schema.name>public</schema.name>
		<jdbc.user>payments_ms_user</jdbc.user>
		<jdbc.password>12345</jdbc.password>
		<jdbc.driver>org.postgresql.Driver</jdbc.driver>
		<jooq.database>org.jooq.meta.postgres.PostgresDatabase</jooq.database>
		<flyway.locations>filesystem:src/main/resources/db/migration/tables,filesystem:src/main/resources/db/migration/data</flyway.locations>
		<jdbc.url>jdbc:postgresql://localhost:5432/payments_ms</jdbc.url>
		<rider-core.version>1.7.2</rider-core.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-web-autoconfigure</artifactId>
			<version>0.3.2</version>
		</dependency>

		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>${dozer.version}</version>
		</dependency>


		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>


		<!-- Swagger Documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<!-- Spring REST Docs Documentation -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-restassured</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.driver.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.database-rider</groupId>
			<artifactId>rider-core</artifactId>
			<version>${rider-core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.database-rider</groupId>
			<artifactId>rider-spring</artifactId>
			<version>${rider-core.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/generated-docs</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<driver>${jdbc.driver}</driver>
					<url>${jdbc.url}</url>
					<user>${jdbc.user}</user>
					<password>${jdbc.password}</password>
					<schemas>${schema.name}</schemas>
					<ignoreMissingMigrations>true</ignoreMissingMigrations>
					<locations>
						<location>${flyway.locations}</location>
					</locations>
					<placeholders>
						<schemaName>${schema.name}</schemaName>
					</placeholders>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>
				<executions>
					<execution>
						<id>jooq-codegen</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<jdbc>
						<driver>${jdbc.driver}</driver>
						<url>${jdbc.url}</url>
						<user>${jdbc.user}</user>
						<password>${jdbc.password}</password>
					</jdbc>
					<generator>
						<database>
							<name>${jooq.database}</name>
							<includes>.*</includes>
							<excludes></excludes>
							<inputSchema>${schema.name}</inputSchema>
						</database>
						<target>
							<packageName>com.kyripay.payment.dao.impl.jooq.meta</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>../api/*Test.java</exclude>
						<exclude>../dao/*Test.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>generate-docs</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDocumentName>index.adoc</sourceDocumentName>
									<backend>html</backend>
									<doctype>book</doctype>
									<attributes>
										<snippets>${project.build.directory}/generated-snippets</snippets>
									</attributes>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.springframework.restdocs</groupId>
								<artifactId>spring-restdocs-asciidoctor</artifactId>
								<version>${spring-restdocs.version}</version>
							</dependency>
						</dependencies>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>../service/*Test.java</exclude>
								<exclude>../dao/*Test.java</exclude>
							</excludes>
							<includes>
								<include>../api/*Test.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker</id>
			<properties>
				<dockerfile.version>1.4.1</dockerfile.version>
				<docker.image.prefix>kyripay</docker.image.prefix>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile.version}</version>
						<!-- Wire up to the default build phases -->
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker.image.prefix}/${project.artifactId}</repository>
							<buildArgs>
								<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<dependencies>
							<!-- To make this work on JDK 9+ -->
							<dependency>
								<groupId>javax.activation</groupId>
								<artifactId>javax.activation-api</artifactId>
								<version>1.2.0</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
