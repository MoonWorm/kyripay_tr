plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id "org.asciidoctor.convert" version "1.5.3"
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
	id 'com.palantir.docker-run' version '0.22.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.kyripay'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	asciidoctor    'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testCompile    'org.springframework.restdocs:spring-restdocs-restassured'

	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'io.rest-assured:rest-assured:3.3.0'
	testCompile "org.testcontainers:testcontainers:1.11.3"
}

ext {
	snippetsDir = file('build/generated-snippets')
	set('springCloudVersion', "Greenwich.SR1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}


docker {
	dependsOn build
	name "kyripay-acknowledgement"
//	dockerfile project.file("Dockerfile")
	tag "version", "kyripay/kyripay-acknowledgement:${project.version}"
	tag "latest", "kyripay/kyripay-acknowledgement:latest"
	files tasks.bootJar.outputs
	buildArgs([VERSION: project.version])
}

dockerRun {
	name 'kyripay-acknowledgement'
	image 'kyripay-acknowledgement'
	ports '8080:8080'
	daemonize true
}
