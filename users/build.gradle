plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
    id "org.asciidoctor.convert" version "1.5.3"
    id 'java'
}

group = 'com.kyripay.users'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Greenwich.SR1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'commons-io:commons-io:2.4'

    runtime 'org.postgresql:postgresql:42.2.5'
    runtime 'org.flywaydb:flyway-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'org.springframework.restdocs:spring-restdocs-restassured'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

task removePostgresDb (type: Exec){
    commandLine 'docker', 'rm', '-f', 'postgresdb'
    ignoreExitValue true
}

task startPortgresDb (type: Exec, dependsOn: removePostgresDb){
    commandLine 'docker', 'run', '-d', '-p', '5432:5432', '--name', 'postgresdb', 'postgres'
}

test {
    outputs.dir snippetsDir
}

tasks.test.dependsOn(startPortgresDb)

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}