plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id "org.asciidoctor.convert" version "1.5.3"
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '4.10.0'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'

group = 'com.kyripay'
version = '0.0.2'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    implementation 'org.liquibase:liquibase-core'
    
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql:42.2.6'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude module: 'junit'
    }

    //JUnit 5: fix strange bug java.lang.NoSuchMethodError: org.junit.platform.commons.util.ReflectionUtils.tryToLoadClass(Ljava/lang/String;)Lorg/junit/platform/commons/function/Try;
    //because 1.3.2 comes from somewhere...
    testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.4.2'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.4.2'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.4.0'

    testImplementation 'org.springframework.security:spring-security-test'

    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'org.testcontainers:testcontainers:1.11.3'
    testCompile 'org.testcontainers:postgresql:1.11.3'
    testCompile 'org.testcontainers:junit-jupiter:1.11.3'
    testCompile 'org.mockito:mockito-junit-jupiter:2.23.0'
    testCompile ('com.github.database-rider:rider-core:1.7.2') {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
    }
    testCompile ('com.github.database-rider:rider-spring:1.7.2') {
        exclude module: 'logback-classic'
        exclude module: 'slf4j-simple'
    }
    
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-spring-web:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    compile group: 'org.springframework.restdocs', name: 'spring-restdocs-restassured', version: '2.0.3.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.16.Final'

}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    systemProperty("spring.profiles.active", "test")
    testLogging.showStandardStreams = true
    outputs.dir snippetsDir
    inputs.file("$projectDir/src/docs/asciidoc/index.adoc")
    
    enabled = false //temporary, to speed-up
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
    attributes 'snippets': snippetsDir

    enabled = false //temporary, to speed-up; also it may fail if 'test' task (which is disabled as well) was not launched
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    //Didn't manage to access these docs in runtime (/docs/index.html), even though these are really packed into Spring Boot jar.

    //archiveName = "$baseName.$extension"
}


docker {

    registryCredentials {
        username = dockerhubUser
        password = dockerhubPassword
    }

    springBootApplication {
        baseImage = 'openjdk:8-jdk-alpine'
        ports = [8090]
        tag = "asidoruk/kyripay-traces:${version}"
        maintainer = 'asidoruk@kyriba.com'
    }

}



